1. De operasjonene som kjører i parallell er sorteringene av tråder og flettingen. Jeg måtte legge til en synchronized til metoden som initialiserer hver fletting i monitor, hvis ikke overkjørte flettingene av trådene hverandre og den ble ikke ferdig. Uansett så starter flettingen når to tråder er ferdig sorterte, samtidig som nye tråder fortsetter å sortere. I henhold til Amdahls lov så kan ikke innlesningen fra fil og skrivingen til fil skje i parallell.
2. Jeg fikk nær dobling av kjøretid når jeg doblet antall ord i sowpods-listen og names-listen. Jeg har ikke hatt noen erfaring med tråder i java tidligere, så det var interessant å se at når jeg doblet antall tråder (fra 200 til 400) under doblingen av sowpods-listen, så var det dette antallet som sorterte raskest, akkurat som 200 sorterte raskest i den "normale" sowpods-filen.							sowpods.txt						Tråder			Tid			100			895 ms			200			810 ms (best)				300			836 ms			400			843 ms			500			856 ms			1000 			922 ms			Dobling av ord i sowpods.txt	
			Tråder			Tid			100			2113 ms			200			1843 ms			300			1877 ms			400			1449 ms (best)			500			1730 ms			1000			1877 msTestene ble utført på en mac med Intel Core i7 (4 kjerner) 2.3 ghz prosessorKommentar til besvarelsen:Jeg føler jeg har fått til sortering- (med innstikk) og fletting-algoritmene bra, det samme med oppdelingen av listen. Trådene sorterer og fletter parallelt, men jeg er litt usikker på om måten jeg har gjort det på i monitoren er den mest effektive. Jeg mener (og håper:)) jeg ihvertfall har besvart oppgaveteksten noenlunde korrekt.